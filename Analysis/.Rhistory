n.hatchrate <- c(
'HT1' = "HT1",
'HT1st' = "HT1*",
'HT2/2st' = "HT2/2*"
)
#### Tests ####
library(rstatix)
library(tidyverse)
library(broom)
rp.test <- raw %>% filter(!is.na(sum_hatch_rate))
shapiro <- rp.test %>%
filter(!is.na(Haplotype)) %>%
group_by(Group, Haplotype) %>%
nest() %>%
mutate(Shapiro = map(data, ~shapiro.test(.x$sum_hatch_rate)))
shapiro_g <- shapiro %>%
mutate(shapiro_g = Shapiro %>% map(glance)) %>%
unnest(shapiro_g)
shapiro_g
stat.result <- rp.test %>% ungroup() %>% filter(!is.na(sum_hatch_rate)) %>% group_by(Haplotype) %>% t_test(sum_hatch_rate ~ Group) %>% add_significance()
stat.result
stat.result <- stat.result %>% add_xy_position(x = "Group", dodge = 0.8)
#### E ####
pplot.hatchrate <-
ggplot(raw,aes(x=Group,y=sum_hatch_rate)) +
geom_boxplot(aes(fill=Group)) +
facet_grid(.~Haplotype,labeller=as_labeller(n.hatchrate),scales='free_x') +
stat_summary(fun.data = n_fun.p1, geom = "text", vjust = -0.2) +
theme_USGS_box() +
theme(strip.text.x.top = element_text(face = "bold"),
legend.position = "none",
aspect.ratio = 3,
axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "transparent",
colour = NA_character_),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "transparent",
colour = NA_character_),
legend.background = element_rect(fill = "#202020"),
legend.box.background = element_rect(fill = "transparent"),
legend.key = element_rect(fill = "transparent"),
plot.title = element_text(color = "#FFFFFF")
) +
scale_fill_manual(values = cbp5) +
scale_colour_manual(values = cbp5) +
xlab("") +
ylab("") +
stat_pvalue_manual(stat.result, step.increase = 0.01, size = 4, tip.length = 0.01)+
scale_y_continuous(labels = scales::percent,
breaks = c(0,0.2,0.4,0.6,0.8,1),
expand = expansion(mult = c(0.07,0.10)))
pplot.hatchrate
#### E ####
pplot.hatchrate <-
ggplot(raw,aes(x=Group,y=sum_hatch_rate)) +
geom_boxplot(aes(fill=Group)) +
facet_grid(.~Haplotype,labeller=as_labeller(n.hatchrate),scales='free_x') +
stat_summary(fun.data = n_fun.p1, geom = "text", vjust = -0.2) +
theme_USGS_box() +
theme(strip.text.x.top = element_text(face = "bold"),
legend.position = "none",
aspect.ratio = 3,
axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "transparent",
colour = NA_character_),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "transparent",
colour = NA_character_),
legend.background = element_rect(fill = "#202020"),
legend.box.background = element_rect(fill = "transparent"),
legend.key = element_rect(fill = "transparent"),
plot.title = element_text(color = "#FFFFFF")
) +
scale_fill_manual(values = cbp5) +
scale_colour_manual(values = cbp5) +
xlab("") +
ylab("") +
stat_pvalue_manual(stat.result, step.increase = 0.01, size = 4, tip.length = 0.01)+
scale_y_continuous(labels = scales::percent,
breaks = c(0,0.2,0.4,0.6,0.8,1),
expand = expansion(mult = c(0.07,0.15)))
pplot.hatchrate
stat.result <- mutate(stat.result, y.position = y.position - 0.01)
#### E ####
pplot.hatchrate <-
ggplot(raw,aes(x=Group,y=sum_hatch_rate)) +
geom_boxplot(aes(fill=Group)) +
facet_grid(.~Haplotype,labeller=as_labeller(n.hatchrate),scales='free_x') +
stat_summary(fun.data = n_fun.p1, geom = "text", vjust = -0.2) +
theme_USGS_box() +
theme(strip.text.x.top = element_text(face = "bold"),
legend.position = "none",
aspect.ratio = 3,
axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "transparent",
colour = NA_character_),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "transparent",
colour = NA_character_),
legend.background = element_rect(fill = "#202020"),
legend.box.background = element_rect(fill = "transparent"),
legend.key = element_rect(fill = "transparent"),
plot.title = element_text(color = "#FFFFFF")
) +
scale_fill_manual(values = cbp5) +
scale_colour_manual(values = cbp5) +
xlab("") +
ylab("") +
stat_pvalue_manual(stat.result, step.increase = 0.01, size = 4, tip.length = 0.01)+
scale_y_continuous(labels = scales::percent,
breaks = c(0,0.2,0.4,0.6,0.8,1),
expand = expansion(mult = c(0.07,0.15)))
pplot.hatchrate
stat.result <- mutate(stat.result, y.position = y.position - 0.05)
#### E ####
pplot.hatchrate <-
ggplot(raw,aes(x=Group,y=sum_hatch_rate)) +
geom_boxplot(aes(fill=Group)) +
facet_grid(.~Haplotype,labeller=as_labeller(n.hatchrate),scales='free_x') +
stat_summary(fun.data = n_fun.p1, geom = "text", vjust = -0.2) +
theme_USGS_box() +
theme(strip.text.x.top = element_text(face = "bold"),
legend.position = "none",
aspect.ratio = 3,
axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "transparent",
colour = NA_character_),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "transparent",
colour = NA_character_),
legend.background = element_rect(fill = "#202020"),
legend.box.background = element_rect(fill = "transparent"),
legend.key = element_rect(fill = "transparent"),
plot.title = element_text(color = "#FFFFFF")
) +
scale_fill_manual(values = cbp5) +
scale_colour_manual(values = cbp5) +
xlab("") +
ylab("") +
stat_pvalue_manual(stat.result, step.increase = 0.01, size = 4, tip.length = 0.01)+
scale_y_continuous(labels = scales::percent,
breaks = c(0,0.2,0.4,0.6,0.8,1),
expand = expansion(mult = c(0.07,0.15)))
pplot.hatchrate
stat.result <- stat.result %>% add_xy_position(x = "Group", dodge = 0.8)
stat.result <- mutate(stat.result, y.position = y.position - 0.05)
#### E ####
pplot.hatchrate <-
ggplot(raw,aes(x=Group,y=sum_hatch_rate)) +
geom_boxplot(aes(fill=Group)) +
facet_grid(.~Haplotype,labeller=as_labeller(n.hatchrate),scales='free_x') +
stat_summary(fun.data = n_fun.p1, geom = "text", vjust = -0.2) +
theme_USGS_box() +
theme(strip.text.x.top = element_text(face = "bold"),
legend.position = "none",
aspect.ratio = 3,
axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "transparent",
colour = NA_character_),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "transparent",
colour = NA_character_),
legend.background = element_rect(fill = "#202020"),
legend.box.background = element_rect(fill = "transparent"),
legend.key = element_rect(fill = "transparent"),
plot.title = element_text(color = "#FFFFFF")
) +
scale_fill_manual(values = cbp5) +
scale_colour_manual(values = cbp5) +
xlab("") +
ylab("") +
stat_pvalue_manual(stat.result, step.increase = 0.01, size = 4, tip.length = 0.01)+
scale_y_continuous(labels = scales::percent,
breaks = c(0,0.2,0.4,0.6,0.8,1),
expand = expansion(mult = c(0.07,0.15)))
pplot.hatchrate
return(data.frame(y = 1.15,
label = length(x)))
# hatch rate
n_fun.p1 <- function(x){
return(data.frame(y = 1.15,
label = length(x)))
}
stat.result <- stat.result %>% add_xy_position(x = "Group", dodge = 0.8)
stat.result <- mutate(stat.result, y.position = y.position - 0.05)
#### E ####
pplot.hatchrate <-
ggplot(raw,aes(x=Group,y=sum_hatch_rate)) +
geom_boxplot(aes(fill=Group)) +
facet_grid(.~Haplotype,labeller=as_labeller(n.hatchrate),scales='free_x') +
stat_summary(fun.data = n_fun.p1, geom = "text", vjust = -0.2) +
theme_USGS_box() +
theme(strip.text.x.top = element_text(face = "bold"),
legend.position = "none",
aspect.ratio = 3,
axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "transparent",
colour = NA_character_),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "transparent",
colour = NA_character_),
legend.background = element_rect(fill = "#202020"),
legend.box.background = element_rect(fill = "transparent"),
legend.key = element_rect(fill = "transparent"),
plot.title = element_text(color = "#FFFFFF")
) +
scale_fill_manual(values = cbp5) +
scale_colour_manual(values = cbp5) +
xlab("") +
ylab("") +
stat_pvalue_manual(stat.result, step.increase = 0.01, size = 4, tip.length = 0.01)+
scale_y_continuous(labels = scales::percent,
breaks = c(0,0.2,0.4,0.6,0.8,1),
expand = expansion(mult = c(0.07,0.15)))
pplot.hatchrate
library(readxl)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(reshape2)
library(scales)
library(rstatix)
library(ggh4x)
library(ggsignif)
datapath <- "/Users/zhehaohu/Library/Mobile Documents/com~apple~CloudDocs/UHH/B.Sc. Biologie/Bachelorarbeit/DNA Samples/Zhehao_Hu_Bachelorthesis_Data.xlsx"
mamas <- read_xlsx(datapath, sheet = "Tetracycline", range = "A3:V61")
kids <- read_xlsx(datapath, sheet = "Tetracycline Offspring", range = "A3:Y51")
# Data preparation
mamas <- mamas %>% filter(!is.na(Gl_ID)) %>% mutate(Partner_M = NA) %>% select(-c(6:13,17,19)) %>% filter(`Initial  Target Copies` != "Positive")
colnames(mamas)[2:3] <- c("PID","OID")
mamas$OID <- as.character(mamas$OID)
mamas$Gl_ID <- as.character(mamas$Gl_ID)
kids <- kids %>% filter(!is.na(Gl_ID)) %>% select(-c(6:14,20,22)) %>% filter(`Initial  Target Copies` != "Positive")
kids$`Initial  Target Copies` <- as.character(kids$`Initial  Target Copies`)
colnames(kids)[2:3] <- c("PID","OID")
df <- bind_rows(mamas, kids) %>% arrange(PID) %>% mutate(Name = case_when(
is.na(OID) ~ paste0(PID, " Parent"),
.default = paste0(PID, " ", OID)), .before = PID)
library(readxl)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(reshape2)
library(scales)
library(rstatix)
library(ggh4x)
library(ggsignif)
datapath <- "/Users/zhehaohu/Library/Mobile Documents/com~apple~CloudDocs/UHH/B.Sc. Biologie/Bachelorarbeit/DNA Samples/Zhehao_Hu_Bachelorthesis_Data.xlsx"
mamas <- read_xlsx(datapath, sheet = "Tetracycline", range = "A3:V61")
kids <- read_xlsx(datapath, sheet = "Tetracycline Offspring", range = "A3:Y51")
# Data preparation
mamas <- mamas %>% filter(!is.na(Gl_ID)) %>% mutate(Partner_M = NA) %>% select(-c(6:13,17,19)) %>% filter(`Initial  Target Copies` != "Positive")
colnames(mamas)[2:3] <- c("PID","OID")
mamas$OID <- as.character(mamas$OID)
mamas$Gl_ID <- as.character(mamas$Gl_ID)
kids <- kids %>% filter(!is.na(Gl_ID)) %>% select(-c(6:14,20,22)) %>% filter(`Initial  Target Copies` != "Positive")
kids$`Initial  Target Copies` <- as.numeric(kids$`Initial  Target Copies`)
mamas$`Initial  Target Copies` <- as.numeric(mamas$`Initial  Target Copies`)
colnames(kids)[2:3] <- c("PID","OID")
df <- bind_rows(mamas, kids) %>% arrange(PID) %>% mutate(Name = case_when(
is.na(OID) ~ paste0(PID, " Parent"),
.default = paste0(PID, " ", OID)), .before = PID)
colnames(df)[12] <- "copies"
df <- df %>% filter(PID %in% select(filter(df,duplicated(df$PID)), PID)$PID)
df$copies <- as.numeric(df$copies)
df <- df %>% group_by(PID) %>% mutate(per = copies/max(copies))
df <- df %>% mutate(disp = paste0(round(per*100, digit = 3),"%"))
View(df)
df <- df %>% mutate(generation = case_when(
is.na(OID) ~ "P",
!is.na(OID) ~ "F1"
))
# test
f1in.test <- raw %>% filter(!is.na(sum_hatch_rate))
shapiro <- f1in.test %>%
filter(!is.na(Haplotype)) %>%
group_by(Group, Haplotype) %>%
nest() %>%
mutate(Shapiro = map(data, ~shapiro.test(.x$copies)))
str(f1in.test)
# test
f1in.test <- df %>% filter(!is.na(sum_hatch_rate))
# test
f1in.test <- df %>% filter(!is.na(copies))
shapiro <- f1in.test %>%
filter(!is.na(Haplotype)) %>%
group_by(Group, Haplotype) %>%
nest() %>%
mutate(Shapiro = map(data, ~shapiro.test(.x$copies)))
# test
f1in.test <- df %>% filter(!is.na(copies) & !is.na(Haplotype))
shapiro <- f1in.test %>%
filter(!is.na(Haplotype)) %>%
group_by(Group, Haplotype) %>%
nest() %>%
mutate(Shapiro = map(data, ~shapiro.test(.x$copies)))
shapiro_g <- shapiro %>%
mutate(shapiro_g = Shapiro %>% map(glance)) %>%
unnest(shapiro_g)
shapiro_g
shapiro <- f1in.test %>%
filter(!is.na(Haplotype)) %>%
group_by(generation, Group) %>%
nest() %>%
mutate(Shapiro = map(data, ~shapiro.test(.x$copies)))
shapiro_g <- shapiro %>%
mutate(shapiro_g = Shapiro %>% map(glance)) %>%
unnest(shapiro_g)
shapiro_g
stat.result <- f1in.test %>% ungroup() %>% group_by(Haplotype) %>% t_test(sum_hatch_rate ~ Group) %>% add_significance()
stat.result <- f1in.test %>% ungroup() %>% group_by(Haplotype) %>% t_test(copies ~ Group) %>% add_significance()
stat.result
stat.result <- f1in.test %>% ungroup() %>% group_by(generation) %>% t_test(copies ~ Group) %>% add_significance()
stat.result
stat.result <- f1in.test %>% ungroup() %>% group_by(Group) %>% t_test(copies ~ generation) %>% add_significance()
stat.result
stat.result <- stat.result %>% add_xy_position(x = "Group", dodge = 0.8)
#plot
pf1in <-
df %>%
ggplot(aes(x = factor(test.group, level = level_tgroup), y = copies, fill = Group)) +
geom_boxplot() +
scale_y_log10(limits = c(5000, 1e9)) +
theme_USGS_box() +
theme(strip.text.x.top = element_text(face = "bold", size = 10),
aspect.ratio = 1.3,
axis.text.x = element_text(vjust = 1, hjust = 0.1, size = 10, face = "bold"),
axis.line = element_blank()) +
scale_fill_manual(values = cbp5) +
xlab("") +
scale_x_discrete(labels = c("   Parents", "","F1 Offsprings", "")) +
ylab("")
pf1in
pf1in <-
df %>%
ggplot(aes(x = generation, y = copies)) +
geom_boxplot(aes(fill = Group)) +
facet_grid(.~Group,scales='free_x') +
scale_y_log10(limits = c(5000, 1e9)) +
theme_USGS_box() +
theme(strip.text.x.top = element_text(face = "bold", size = 10),
aspect.ratio = 1.3,
axis.text.x = element_text(vjust = 1, hjust = 0.1, size = 10, face = "bold"),
axis.line = element_blank()) +
scale_fill_manual(values = cbp5) +
xlab("") +
scale_x_discrete(labels = c("   Parents", "","F1 Offsprings", "")) +
ylab("")
pf1in
pf1in <-
df %>%
ggplot(aes(x = generation, y = copies)) +
geom_boxplot(aes(fill = Group)) +
facet_grid(.~Group,scales='free_x') +
scale_y_log10(limits = c(5000, 1e9)) +
theme_USGS_box() +
theme(strip.text.x.top = element_text(face = "bold", size = 10),
aspect.ratio = 1.3,
axis.text.x = element_text(vjust = 1, hjust = 0.1, size = 10, face = "bold"),
axis.line = element_blank()) +
scale_fill_manual(values = cbp5) +
xlab("") +
ylab("")
pf1in
library(readxl)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(reshape2)
library(scales)
library(rstatix)
library(ggh4x)
library(ggsignif)
library(ggpubr)
datapath <- "/Users/hu_zhehao/Library/Mobile Documents/com~apple~CloudDocs/UHH/B.Sc. Biologie/Bachelorarbeit/DNA Samples/Zhehao_Hu_Bachelorthesis_Data.xlsx"
mamas <- read_xlsx(datapath, sheet = "Tetracycline", range = "A3:V61")
kids <- read_xlsx(datapath, sheet = "Tetracycline Offspring", range = "A3:Y51")
# Data preparation
mamas <- mamas %>% filter(!is.na(Gl_ID)) %>% mutate(Partner_M = NA) %>% select(-c(6:13,17,19)) %>% filter(`Initial  Target Copies` != "Positive")
colnames(mamas)[2:3] <- c("PID","OID")
mamas$OID <- as.character(mamas$OID)
mamas$Gl_ID <- as.character(mamas$Gl_ID)
kids <- kids %>% filter(!is.na(Gl_ID)) %>% select(-c(6:14,20,22)) %>% filter(`Initial  Target Copies` != "Positive")
kids$`Initial  Target Copies` <- as.numeric(kids$`Initial  Target Copies`)
mamas$`Initial  Target Copies` <- as.numeric(mamas$`Initial  Target Copies`)
colnames(kids)[2:3] <- c("PID","OID")
df <- bind_rows(mamas, kids) %>% arrange(PID) %>% mutate(Name = case_when(
is.na(OID) ~ paste0(PID, " Parent"),
.default = paste0(PID, " ", OID)), .before = PID)
colnames(df)[12] <- "copies"
df <- df %>% filter(PID %in% select(filter(df,duplicated(df$PID)), PID)$PID)
df$copies <- as.numeric(df$copies)
df <- df %>% group_by(PID) %>% mutate(per = copies/max(copies))
df <- df %>% mutate(disp = paste0(round(per*100, digit = 3),"%"))
f1in.test <- df %>% filter(!is.na(copies) & !is.na(Haplotype))
shapiro <- f1in.test %>%
filter(!is.na(Haplotype)) %>%
group_by(generation, Group) %>%
nest() %>%
mutate(Shapiro = map(data, ~shapiro.test(.x$copies)))
library(rstatix)
library(tidyverse)
library(broom)
f1in.test <- df %>% filter(!is.na(copies) & !is.na(Haplotype))
shapiro <- f1in.test %>%
filter(!is.na(Haplotype)) %>%
group_by(generation, Group) %>%
nest() %>%
mutate(Shapiro = map(data, ~shapiro.test(.x$copies)))
library(readxl)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(reshape2)
library(scales)
library(rstatix)
library(ggh4x)
library(ggsignif)
library(ggpubr)
datapath <- "/Users/hu_zhehao/Library/Mobile Documents/com~apple~CloudDocs/UHH/B.Sc. Biologie/Bachelorarbeit/DNA Samples/Zhehao_Hu_Bachelorthesis_Data.xlsx"
mamas <- read_xlsx(datapath, sheet = "Tetracycline", range = "A3:V61")
kids <- read_xlsx(datapath, sheet = "Tetracycline Offspring", range = "A3:Y51")
# Data preparation
mamas <- mamas %>% filter(!is.na(Gl_ID)) %>% mutate(Partner_M = NA) %>% select(-c(6:13,17,19)) %>% filter(`Initial  Target Copies` != "Positive")
colnames(mamas)[2:3] <- c("PID","OID")
mamas$OID <- as.character(mamas$OID)
mamas$Gl_ID <- as.character(mamas$Gl_ID)
kids <- kids %>% filter(!is.na(Gl_ID)) %>% select(-c(6:14,20,22)) %>% filter(`Initial  Target Copies` != "Positive")
kids$`Initial  Target Copies` <- as.numeric(kids$`Initial  Target Copies`)
mamas$`Initial  Target Copies` <- as.numeric(mamas$`Initial  Target Copies`)
colnames(kids)[2:3] <- c("PID","OID")
df <- bind_rows(mamas, kids) %>% arrange(PID) %>% mutate(Name = case_when(
is.na(OID) ~ paste0(PID, " Parent"),
.default = paste0(PID, " ", OID)), .before = PID)
colnames(df)[12] <- "copies"
df <- df %>% filter(PID %in% select(filter(df,duplicated(df$PID)), PID)$PID)
df$copies <- as.numeric(df$copies)
df <- df %>% group_by(PID) %>% mutate(per = copies/max(copies))
df <- df %>% mutate(disp = paste0(round(per*100, digit = 3),"%"))
#### pfin####
df <- df %>% mutate(generation = case_when(
is.na(OID) ~ "Parent",
!is.na(OID) ~ "F1"
))
# test
library(rstatix)
library(tidyverse)
library(broom)
f1in.test <- df %>% filter(!is.na(copies) & !is.na(Haplotype))
shapiro <- f1in.test %>%
filter(!is.na(Haplotype)) %>%
group_by(generation, Group) %>%
nest() %>%
mutate(Shapiro = map(data, ~shapiro.test(.x$copies)))
shapiro_g <- shapiro %>%
mutate(shapiro_g = Shapiro %>% map(glance)) %>%
unnest(shapiro_g)
shapiro_g
stat.result <- f1in.test %>% ungroup() %>% group_by(Group) %>% t_test(copies ~ generation) %>% add_significance()
stat.result
stat.result <- stat.result %>% add_xy_position(x = "generation", dodge = 0.8)
stat.result <- mutate(stat.result, y.position = (log(y.position, base = 10)+0.5) - 0.05)
library(readxl)
library(dplyr)
library(tidyr)
library(ggpubr)
library(purrr)
# Import Data
raw <- read_xlsx("/Users/hu_zhehao/Library/Mobile Documents/com~apple~CloudDocs/UHH/B.Sc. Biologie/Bachelorarbeit/DNA Samples/Zhehao_Hu_Bachelorthesis_Data.xlsx", sheet = "Reproduction", range = "A3:P61") %>% filter(!is.na(Group))
colnames(raw)[5:16]  <- c("sum_layed","sum_hatched", "sum_grown", "6/27_layed", "6/27_hatched", "6/27_grown","7/4_layed", "7/4_hatched", "7/4_grown","7/11_layed", "7/11_hatched", "7/11_grown")
# calculate hatch rate
raw <- raw %>% mutate(sum_hatch_rate = sum_hatched / sum_layed)
library(ggplot2)
# hatch rate
n_fun.p1 <- function(x){
return(data.frame(y = 1.15,
label = length(x)))
}
n.hatchrate <- c(
'HT1' = "HT1",
'HT1st' = "HT1*",
'HT2/2st' = "HT2/2*"
)
#### Tests ####
library(rstatix)
library(tidyverse)
library(broom)
rp.test <- raw
shapiro <- rp.test %>%
filter(!is.na(Haplotype)) %>%
group_by(Group, Haplotype) %>%
nest() %>%
mutate(Shapiro = map(data, ~shapiro.test(.x$sum_hatch_rate)))
shapiro_g <- shapiro %>%
mutate(shapiro_g = Shapiro %>% map(glance)) %>%
unnest(shapiro_g)
shapiro_g
stat.result <- rp.test %>% ungroup() %>% filter(!is.na(sum_hatch_rate)) %>% group_by(Haplotype) %>% t_test(sum_hatch_rate ~ Group) %>% add_significance()
stat.result
stat.result <- stat.result %>% add_xy_position(x = "Group", dodge = 0.8)
stat.result <- mutate(stat.result, y.position = 1.1)
stat.result <- rp.test %>% ungroup() %>% filter(!is.na(sum_hatch_rate)) %>% group_by(Haplotype) %>% t_test(sum_hatch_rate ~ Group, Haplotype) %>% add_significance()
stat.result <- rp.test %>% ungroup() %>% filter(!is.na(sum_hatch_rate)) %>% t_test(sum_hatch_rate ~ Group, Haplotype) %>% add_significance()
stat.result
stat.result <- rp.test %>% ungroup() %>% filter(!is.na(sum_hatch_rate)) %>% group_by(Group) %>% t_test(sum_hatch_rate ~ Haplotype) %>% add_significance()
stat.result
